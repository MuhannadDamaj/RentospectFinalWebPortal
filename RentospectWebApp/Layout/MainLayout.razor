@inherits LayoutComponentBase
@inject AuthStateProvider AuthStateProvider
@inject NavigationManager  NavigationManager

<div class="page">
    <div class="top-row">
        <nav class="custom-navbar">
            <div class="container-fluid d-flex justify-content-between align-items-center">
                <a href="/" class="navbar-brand">
                    <img src="images/logo.png" alt="Rentospect" class="logo-img" />
                </a>
                <ul class="nav-links d-flex m-0 p-0">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>
                    <NavLink class="nav-link" href="admin/manage-companies">Company Settings</NavLink>
                    <NavLink class="nav-link" href="admin/manage-branches">Branches</NavLink>
                    <NavLink class="nav-link" href="admin/manage-users">Users</NavLink>
                    <NavLink class="nav-link" href="admin/manage-carclasses">Car Classes</NavLink>
                    <NavLink class="nav-link" href="admin/manage-cars">Cars</NavLink>
                    <NavLink class="nav-link" href="admin/manage-damages">Damages</NavLink>
                </ul>
                <button class="navbar-logout" @onclick="LogoutAsync">Logout</button>
            </div>
        </nav>

    </div>
    <div class="user-info">
        <span>@LoggedInUserName</span>
    </div>
    <main>

        <article class="content px-4">
            @if (AuthStateProvider.IsInitializing)
            {
                <p>Initializing state ...</p>
            }
            else
            {

                <div class="main-container">
                    @Body
                </div>
            }
        </article>
    </main>
</div>
@code{
    private string? LoggedInUserName;

    protected override async Task OnInitializedAsync()
    {
        while (AuthStateProvider.IsInitializing)
        {
            await Task.Delay(500);
        }
        LoggedInUserName = "Welcome " + AuthStateProvider._user.Name;
    }
    private async Task LogoutAsync()
    {
        await AuthStateProvider.SetLogoutAsync();
        NavigationManager.NavigateTo("auth/login", replace: true);
    }
}
